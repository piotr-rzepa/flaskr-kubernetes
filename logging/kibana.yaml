---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: logging
  labels:
    app: flask-app
    department: kibana-logging
spec:
  selector:
    app: flask-app
    department: kibana-logging
  ports:
  - protocol: TCP
    name: http
    port: 5601
    targetPort: 5601
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: logging
  labels:
    app: flask-app
    department: kibana-logging
spec:
  selector:
    matchLabels:
      app: flask-app
      department: kibana-logging
  replicas: 1
  template:
    metadata:
      labels:
        app: flask-app
        department: kibana-logging    
    spec:
      tolerations:
      - key: kubernetes.io/hostname
        operator: Equal
        value: kind-control-plane
        effect: NoSchedule
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:8.6.2
        env:
          - name: ELASTICSEARCH_HOSTS
            valueFrom:
              configMapKeyRef:
                key: elasticsearch_hosts
                name: kibana-configmap
        ports:
        - containerPort: 5601
        resources:
          requests:
            cpu: 1000m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 2Gi
        readinessProbe:
          httpGet:
            path: /status
            port: 5601
          initialDelaySeconds: 180
          periodSeconds: 10          
        livenessProbe:
          httpGet:
            path: /status
            port: 5601
          initialDelaySeconds: 180
          periodSeconds: 10
        volumeMounts:
          - name: kibana-config
            mountPath: "/usr/share/kibana/config/kibana.yml"
            subPath: kibana.yml
      volumes:
        - name: kibana-config
          configMap:
            name: kibana-configmap
